name: Update the Changelog

on:
  pull_request:
    types:
      - closed

jobs:
  changelog:
    name: Generate changelog
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
      - name: Generate a token
        id: generate-token
        uses: actions/create-github-app-token@0f859bf9e69e887678d5bbfbee594437cb440ffe # v2.1.0
        with:
          app-id: ${{ secrets.ACTIONS_BOT_APP_ID }}
          private-key: ${{ secrets.ACTIONS_BOT_APP_PK }}

      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          fetch-depth: 0

      - name: Generate changelog
        uses: orhun/git-cliff-action@98c93442bb05a455a77bee982867857ae748eeea # v4.5.1
        with:
          config: cliff.toml
          args: "--verbose --bump"
        env:
          OUTPUT: CHANGELOG.md
          GITHUB_REPO: ${{ github.repository }}
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}

      - name: Create or Update Changelog File
        id: create-changelog
        uses: actions/github-script@f28e40c7f34bde8b3046d885e986cb6290c5673b # main
        with:
          github-token: ${{ steps.generate-token.outputs.token }}
          script: |
            // Get the current contents of CHANGELOG.md
            let currentContent = '';
            let fileSha = '';
            let fileExists = false;

            try {
              contents = await github.rest.repos.getContent({
                owner: context.repo.owner,
                repo: context.repo.repo,
                path: 'CHANGELOG.md',
              });

              fileExists = true;
              fileSha = contents.data.sha; // Store the SHA regardless of content
              if (contents.data.content) {
                  currentContent = Buffer.from(contents.data.content, 'base64').toString('utf-8');
              }

            } catch (error) {
              if (error.status === 404) {
                console.log('CHANGELOG.md does not exist, will create it.');
                fileExists = false;
              } else {
                console.error('Error fetching CHANGELOG.md:', error);
                core.setFailed(error.message);
                return;
              }
            }

            // Get the new changelog content
            const newChangelogContent = require('fs').readFileSync('CHANGELOG.md', 'utf-8');

            // If the content has changed, update the file
            if (!fileExists || currentContent !== newChangelogContent) {
              console.log(`${fileExists ? "Updating" : "Creating"} CHANGELOG.md`);

              const createUpdateContents = await github.rest.repos.createOrUpdateFileContents({
                owner: context.repo.owner,
                repo: context.repo.repo,
                path: 'CHANGELOG.md',
                message: 'Automated changelog update',
                content: Buffer.from(newChangelogContent).toString('base64'),
                committer: {
                    name: 'drewbernetes-actions[bot]',
                    email: '199832760+drewbernetes-actions[bot]@users.noreply.github.com'
                },
                author: {
                  name: 'drewbernetes-actions[bot]',
                  email: '199832760+drewbernetes-actions[bot]@users.noreply.github.com'
                },
                sha: fileExists ? fileSha : undefined, // Include SHA if file exists (even if empty)
              });
              core.setOutput('commit_sha', createUpdateContents.data.commit.sha);
            } else {
              console.log('No changes to CHANGELOG.md.');
            }
